---
- name: Check MS SQL Server Health
  hosts: 10.112.0.10
  gather_facts: no
  vars:
    sql_instance: "10.112.0.10"
    sql_user: "rajusql"
    sql_password: "Raju@2002"

  tasks:
    - name: Get Database Space Utilization
      win_shell: |
        try {
          $query = "SELECT DB_NAME(database_id) AS DatabaseName, (size * 8) / 1024 AS SizeMB FROM sys.master_files WHERE type = 0;"
          $result = Invoke-Sqlcmd -Query "$query" -ServerInstance "{{ sql_instance }}" -Username "{{ sql_user }}" -Password "{{ sql_password }}" -TrustServerCertificate | Select-Object DatabaseName, SizeMB | ConvertTo-Json -Compress
          if (-not $result) { Write-Output '[]' } else { Write-Output $result }
        } catch {
          Write-Output '[]'
        }
      register: db_space
      ignore_errors: yes

    - name: Get Database Health
      win_shell: |
        try {
          $query = "SELECT name, state_desc, recovery_model_desc FROM sys.databases;"
          $result = Invoke-Sqlcmd -Query "$query" -ServerInstance "{{ sql_instance }}" -Username "{{ sql_user }}" -Password "{{ sql_password }}" -TrustServerCertificate | Select-Object name, state_desc, recovery_model_desc | ConvertTo-Json -Compress
          if (-not $result) { Write-Output '[]' } else { Write-Output $result }
        } catch {
          Write-Output '[]'
        }
      register: db_health
      ignore_errors: yes

    - name: Check for Deadlocks
      win_shell: |
        try {
          $query = "SELECT COUNT(*) AS Deadlocks FROM sys.dm_tran_locks WHERE request_status = 'WAIT';"
          $result = Invoke-Sqlcmd -Query "$query" -ServerInstance "{{ sql_instance }}" -Username "{{ sql_user }}" -Password "{{ sql_password }}" -TrustServerCertificate | Select-Object Deadlocks | ConvertTo-Json -Compress
          if (-not $result) { Write-Output '{"Deadlocks": 0}' } else { Write-Output $result }
        } catch {
          Write-Output '{"Deadlocks": 0}'
        }
      register: deadlocks
      ignore_errors: yes

    - name: Get SQL Agent Job Activities
      win_shell: |
        try {
          $query = "SELECT job_id, name, last_run_outcome, enabled FROM msdb.dbo.sysjobs;"
          $result = Invoke-Sqlcmd -Query "$query" -ServerInstance "{{ sql_instance }}" -Username "{{ sql_user }}" -Password "{{ sql_password }}" -TrustServerCertificate | Select-Object job_id, name, last_run_outcome, enabled | ConvertTo-Json -Compress
          if (-not $result) { Write-Output '[]' } else { Write-Output $result }
        } catch {
          Write-Output '[]'
        }
      register: job_activities
      ignore_errors: yes

    - name: Convert Outputs to JSON
      set_fact:
        result_json: >-
          {{
            {
              "Database_Space_Utilization": db_space.stdout | from_json | default([]),
              "Database_Health": db_health.stdout | from_json | default([]),
              "Deadlocks": deadlocks.stdout | from_json | default({}),
              "SQL_Agent_Job_Activities": job_activities.stdout | from_json | default([])
            } | to_nice_json
          }}

    - name: Display Clean JSON Output (AWX Compatible)
      debug:
        msg: "{{ result_json }}"
