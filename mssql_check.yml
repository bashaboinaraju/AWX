---
- name: MS SQL Server Monitoring
  hosts: all
  gather_facts: no
  vars:
    sql_server: "20.102.105.60"
    sql_database: "master"
    sql_username: "rajusql"
    sql_password: "Raju@2002"

  tasks:
    - name: Enable and Configure WinRM
      win_shell: |
        winrm quickconfig -q
        Set-Service -Name WinRM -StartupType Automatic
        Start-Service -Name WinRM
        New-NetFirewallRule -Name "WinRM_HTTPS" -DisplayName "WinRM over HTTPS" -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 5986
      register: winrm_config

    - name: Display WinRM Configuration Output
      debug:
        msg: "{{ winrm_config.stdout_lines }}"

    - name: Check Database Space Utilization
      win_shell: |
        $query = @"
        SELECT DB_NAME(database_id) AS DatabaseName, SUM(size * 8) / 1024 AS TotalSizeMB
        FROM sys.master_files GROUP BY database_id;
        "@
        Invoke-Sqlcmd -Query $query -ServerInstance "{{ sql_server }}" -Username "{{ sql_username }}" -Password "{{ sql_password }}" -TrustServerCertificate Yes
      register: db_space_output

    - name: Display Database Space Utilization
      debug:
        msg: "{{ db_space_output.stdout_lines }}"

    - name: Check for Deadlocks
      win_shell: |
        $query = "SELECT * FROM sys.dm_tran_locks WHERE request_status = 'WAIT'"
        Invoke-Sqlcmd -Query $query -ServerInstance "{{ sql_server }}" -Username "{{ sql_username }}" -Password "{{ sql_password }}" -TrustServerCertificate Yes
      register: deadlocks_output

    - name: Display Deadlocks
      debug:
        msg: "{{ deadlocks_output.stdout_lines }}"

    - name: Check SQL Server Agent Job Activities
      win_shell: |
        $query = @"
        SELECT j.job_id, j.name, j.enabled, MAX(h.run_status) AS last_run_status
        FROM msdb.dbo.sysjobs j
        LEFT JOIN msdb.dbo.sysjobhistory h ON j.job_id = h.job_id
        WHERE h.step_id = 0
        GROUP BY j.job_id, j.name, j.enabled;
        "@
        Invoke-Sqlcmd -Query $query -ServerInstance "{{ sql_server }}" -Username "{{ sql_username }}" -Password "{{ sql_password }}" -TrustServerCertificate Yes
      register: job_activities_output

    - name: Display Job Activities
      debug:
        msg: "{{ job_activities_output.stdout_lines }}"

    - name: Execute Remote SQL Command via WinRM
      win_shell: |
        sqlcmd -S {{ sql_server }} -U {{ sql_username }} -P {{ sql_password }} -Q "SELECT @@VERSION"
      register: sql_version_output

    - name: Display SQL Server Version
      debug:
        msg: "{{ sql_version_output.stdout_lines }}"

    - name: Check Database Health
      win_shell: |
        $query = @"
        SELECT name AS DatabaseName, state_desc AS Status,
        (SELECT COUNT(*) FROM sys.dm_exec_requests) AS ActiveRequests,
        (SELECT COUNT(*) FROM sys.dm_exec_sessions WHERE is_user_process = 1) AS ActiveUserConnections,
        (SELECT COUNT(*) FROM sys.dm_os_waiting_tasks) AS PendingRequests,
        (SELECT COUNT(*) FROM sys.dm_os_performance_counters WHERE counter_name = 'Processor Queue Length') AS CPUQueueLength
        FROM sys.databases;
        "@
        Invoke-Sqlcmd -Query $query -ServerInstance "{{ sql_server }}" -Username "{{ sql_username }}" -Password "{{ sql_password }}" -TrustServerCertificate Yes
      register: db_health_output

    - name: Display Database Health
      debug:
        msg: "{{ db_health_output.stdout_lines }}"
